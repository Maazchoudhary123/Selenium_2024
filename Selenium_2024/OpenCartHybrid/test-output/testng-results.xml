<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="7" passed="6" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-04-17T15:38:22 IST" name="Suite" finished-at="2025-04-17T15:39:16 IST" duration-ms="53855">
    <groups>
      <group name="Master">
        <method signature="TC001_AccountRegistrationTest.verify_account_registration()[pri:0, instance:testCases.TC001_AccountRegistrationTest@7bd4937b]" name="verify_account_registration" class="testCases.TC001_AccountRegistrationTest"/>
        <method signature="TC002_LoginTest.verify_login()[pri:0, instance:testCases.TC002_LoginTest@4f2b503c]" name="verify_login" class="testCases.TC002_LoginTest"/>
      </group> <!-- Master -->
      <group name="Sanity">
        <method signature="TC002_LoginTest.verify_login()[pri:0, instance:testCases.TC002_LoginTest@4f2b503c]" name="verify_login" class="testCases.TC002_LoginTest"/>
      </group> <!-- Sanity -->
      <group name="Regression">
        <method signature="TC001_AccountRegistrationTest.verify_account_registration()[pri:0, instance:testCases.TC001_AccountRegistrationTest@7bd4937b]" name="verify_account_registration" class="testCases.TC001_AccountRegistrationTest"/>
      </group> <!-- Regression -->
      <group name="Datadriven">
        <method signature="TC003_LoginDDT.verify_loginDDT(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:testCases.TC003_LoginDDT@bae7dc0]" name="verify_loginDDT" class="testCases.TC003_LoginDDT"/>
      </group> <!-- Datadriven -->
    </groups>
    <test started-at="2025-04-17T15:38:22 IST" name="Test" finished-at="2025-04-17T15:39:16 IST" duration-ms="53855">
      <class name="testCases.TC002_LoginTest">
        <test-method is-config="true" signature="setup()[pri:0, instance:testCases.TC002_LoginTest@4f2b503c]" started-at="2025-04-17T15:38:35 IST" name="setup" finished-at="2025-04-17T15:38:37 IST" duration-ms="2263" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="verify_login()[pri:0, instance:testCases.TC002_LoginTest@4f2b503c]" started-at="2025-04-17T15:38:37 IST" name="verify_login" finished-at="2025-04-17T15:38:38 IST" duration-ms="1103" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verify_login -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:testCases.TC002_LoginTest@4f2b503c]" started-at="2025-04-17T15:38:38 IST" name="teardown" finished-at="2025-04-17T15:38:38 IST" duration-ms="177" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- testCases.TC002_LoginTest -->
      <class name="testCases.TC003_LoginDDT">
        <test-method is-config="true" signature="setup()[pri:0, instance:testCases.TC003_LoginDDT@bae7dc0]" started-at="2025-04-17T15:38:38 IST" name="setup" finished-at="2025-04-17T15:38:41 IST" duration-ms="2875" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="verify_loginDDT(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:testCases.TC003_LoginDDT@bae7dc0]" started-at="2025-04-17T15:38:42 IST" name="verify_loginDDT" data-provider="LoginData" finished-at="2025-04-17T15:38:43 IST" duration-ms="1070" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[abcjohndavid@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[xyz12345]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[valid]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verify_loginDDT -->
        <test-method signature="verify_loginDDT(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:testCases.TC003_LoginDDT@bae7dc0]" started-at="2025-04-17T15:38:43 IST" name="verify_loginDDT" data-provider="LoginData" finished-at="2025-04-17T15:38:54 IST" duration-ms="10406" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ajohndavid@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[xyz12345]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[invalid]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verify_loginDDT -->
        <test-method signature="verify_loginDDT(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:testCases.TC003_LoginDDT@bae7dc0]" started-at="2025-04-17T15:38:54 IST" name="verify_loginDDT" data-provider="LoginData" finished-at="2025-04-17T15:39:04 IST" duration-ms="10611" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[vgvfjohndavid@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[xyz1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[invalid]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verify_loginDDT -->
        <test-method signature="verify_loginDDT(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:testCases.TC003_LoginDDT@bae7dc0]" started-at="2025-04-17T15:39:04 IST" name="verify_loginDDT" data-provider="LoginData" finished-at="2025-04-17T15:39:15 IST" duration-ms="10826" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[vfjohndavid@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[dfgrgrg]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[invalid]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verify_loginDDT -->
        <test-method signature="verify_loginDDT(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:testCases.TC003_LoginDDT@bae7dc0]" started-at="2025-04-17T15:39:15 IST" name="verify_loginDDT" data-provider="LoginData" finished-at="2025-04-17T15:39:15 IST" duration-ms="279" status="FAIL">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
            <param index="2">
              <value is-null="true"/>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Keys to send should be a not null CharSequence]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Keys to send should be a not null CharSequence
at org.openqa.selenium.remote.RemoteWebElement.sendKeys(RemoteWebElement.java:97)
at jdk.internal.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:51)
at jdk.proxy2/jdk.proxy2.$Proxy29.sendKeys(Unknown Source)
at pageObjects.LoginPage.setEmail(LoginPage.java:24)
at testCases.TC003_LoginDDT.verify_loginDDT(TC003_LoginDDT.java:23)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verify_loginDDT -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:testCases.TC003_LoginDDT@bae7dc0]" started-at="2025-04-17T15:39:15 IST" name="teardown" finished-at="2025-04-17T15:39:16 IST" duration-ms="317" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- testCases.TC003_LoginDDT -->
      <class name="testCases.TC001_AccountRegistrationTest">
        <test-method is-config="true" signature="setup()[pri:0, instance:testCases.TC001_AccountRegistrationTest@7bd4937b]" started-at="2025-04-17T15:38:22 IST" name="setup" finished-at="2025-04-17T15:38:31 IST" duration-ms="9033" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="verify_account_registration()[pri:0, instance:testCases.TC001_AccountRegistrationTest@7bd4937b]" started-at="2025-04-17T15:38:31 IST" name="verify_account_registration" finished-at="2025-04-17T15:38:35 IST" duration-ms="3623" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verify_account_registration -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:testCases.TC001_AccountRegistrationTest@7bd4937b]" started-at="2025-04-17T15:38:35 IST" name="teardown" finished-at="2025-04-17T15:38:35 IST" duration-ms="154" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- testCases.TC001_AccountRegistrationTest -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
